# This OTEL collector configuration file with a single OTLP receiver for this purpose.

# Receivers' configuration section
# See for more details following documentation: https://opentelemetry.io/docs/collector/configuration/#receivers
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4417
      http:
        endpoint: 0.0.0.0:4418



# Define exporters to data stores.
# See https://opentelemetry.io/docs/collector/configuration/#exporters
# Also see https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor#recommended-processors
exporters:
  # Exporter for sending trace data to Tempo.
  otlp/grafana:
    # Send to the locally running Tempo service.
    endpoint: tempo:5317
    # TLS is not enabled for the instance.
    tls:
      insecure: true

  # Exporter for sending Prometheus data to Mimir.
  prometheusremotewrite:
    # Send to the locally running Mimir service.
    endpoint: http://mimir:9009/api/v1/push
    # TLS is not enabled for the instance.
    tls:
      insecure: true

## Exporters' configuration section
## See for more details following documentation: https://opentelemetry.io/docs/collector/configuration/#exporters
#exporters:
#
#  # Export over grpc
#  #   traces to tempo(listening on port 5317) 
#  #   metrics to mimir(listening on port 9009)
#  otlp:
#    endpoint: 0.0.0.0:5317
#    endpoint: 0.0.0.0:9009
#
#  # Export logs to loki(listening on port 3100) over http (url)
#  otlphttp:
#    endpoint: http://loki:3100/loki/api/v1/push

# Services configuration section
# See for more details following documentation: https://opentelemetry.io/docs/collector/configuration/#services
service:
  pipelines:
    traces:
      receivers: [otlp]
      exporters: [otlp]
    metrics:
      receivers: [otlp]
      exporters: [otlp]
    logs:
      receivers: [otlp]
      exporters: [otlphttp]
